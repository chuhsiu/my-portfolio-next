[
  {
    "id": 1,
    "image": "/images/project/project1.png",
    "code" : "",
    "link" : "https://www.pegatroncorp.com/",
    "translations": {
      "en": {
        "name" : "PEGATRON",
        "content" : [
          "A front-end and back-end separated project with an independent CMS backend.",
          "",
          "**•&emsp;Back-end**: C# .NET Core architecture, using RESTful API design",
          "**•&emsp;Front-end**: Vue.js architecture, utilizing i18n with Vuex for multi-language management",
          "**•&emsp;CMS Backend**: Vue.js architecture, using Vuetify for quick UI integration and TinyMCE for visual content editing"
        ]
      } ,
      "zh": {
        "name" : "PEGATRON",
        "content" : [
          "採用前後端分離專案，並有獨立CMS後台。",
          "",
          "**•&emsp;後端**：C# .NET Core 架構，使用 RESTful API 設計",
          "**•&emsp;前端**：Vue.js架構，採用 i18n 搭配 Vuex 多語系管理",
          "**•&emsp;CMS後台**：Vue.js架構，使用Vuetify快速整合畫面，引用TinyMCE套件實現可視化內容編輯"
        ]
      }
    }
  },
  {
    "id": 2,
    "image": "/images/project/project2.png",
    "code" : "",
    "link" : "https://svr.pegatroncorp.com/",
    "translations": {
      "en": {
        "name" : "PEGATRON SVR",
        "content" : ["•&emsp;ASP.NET MVC architecture",
  "•&emsp;Modular design with Razor pages (.cshtml), Layout, and Partial Views",
  "•&emsp;Data exchange using JSON format",
  "•&emsp;Asynchronous search functionality via AJAX (jQuery / Fetch)"]
      } ,
      "zh": {
        "name" : "PEGATRON SVR",
        "content" : [
          "•&emsp;ASP.NET MVC 架構",
        "•&emsp;Razor 頁面 (.cshtml) 與 Layout、Partial View 模組化設計",
        "•&emsp;JSON 資料交換格式",
      "•&emsp;AJAX 非同步搜尋功能"]
      }
    }
  },
  {
    "id": 3,
    "image": "/images/project/project3.png",
    "code" : "https://github.com/chuhsiu/my-portfolio-next",
    "link" : "https://my-portfolio-next-theta.vercel.app",
    "translations": {
      "en": {
        "name" : "Personal Website",
        "content" : [
          "•&emsp;Using Next.js App Router with TypeScript, deployed on Vercel",
          "•&emsp;Styled with Radix UI components and Tailwind CSS to quickly create responsive layout designs"
        ]
      } ,
      "zh": {
        "name" : "個人網站",
        "content" : [
          "•&emsp;採用 Next.js App Router 搭配 TypeScript，並部署於 Vercel",
          "•&emsp;使用 Radix UI 元件與 Tailwind CSS，實現快速、響應式版面設計"
        ]
      }
    }
  },
  {
    "id": 4,
    "image": "/images/project/project4.png",
    "code" : "https://github.com/chuhsiu/2018-referendum-analysis",
    "link" : " https://zoeycheng.shinyapps.io/2018-referendum-01/",
    "translations": {
      "en": {
        "name" : "2018 referendum : Scatterplot matrix",
        "content" : [
          "**Shiny App:**\n Used the ggpairs function from the GGally package to explore referendum outcomes and social characteristics across different groups (counties/cities)."
        ]
      } ,
      "zh": {
        "name" : "2018年公投 : 成對變數矩陣",
        "content" : [
          "**Shiny App:**\n 以 GGally 套件的 ggpairs 函數，觀察不同分群(縣市)下的公投狀況以及社會特性表現。"
        ]
      }
    }
  }
  ,
  {
    "id": 5,
    "image": "/images/project/project5.png",
    "code" : "https://github.com/chuhsiu/2018-referendum-analysis",
    "link" : " https://zoeycheng.shinyapps.io/2018-referendum-02/",
    "translations": {
      "en": {
        "name" : "2018 referendum : PCA analysis",
        "content" : [
          "**Shiny App:**\n Integrated with GIS maps to select data points sharing similar dimensions under PCA and observe their geographical distribution."
        ]
      } ,
      "zh": {
        "name" : "2018年公投 : PCA 分析",
        "content" : [
          "**Shiny App:**\n 搭配GIS地圖，可以圈選PCA下相同維度的資料點，並觀察地理分佈。"
        ]
      }
    }
  }
]
